{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample swagger for Fiber",
        "title": "Fiber Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "fiber@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "paths": {
        "/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "homepage",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page num",
                        "name": "page",
                        "in": "query"
                    }
                ]
            }
        },
        "/auth/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "validate email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ]
            }
        },
        "/cancel": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "cancel cart"
            }
        },
        "/cart": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get cart"
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "add to cart",
                "parameters": [
                    {
                        "description": "Order Item Info",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrderItem"
                        }
                    }
                ]
            }
        },
        "/categories": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "add categories",
                "parameters": [
                    {
                        "description": "Category Info",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    }
                ]
            }
        },
        "/checkout": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "checkout"
            }
        },
        "/del/cart/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "remove from cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order item id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ]
            }
        },
        "/del/categories/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "del categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "catg id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ]
            }
        },
        "/del/items/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "del items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "item id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ]
            }
        },
        "/del/products/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "del products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "prod id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ]
            }
        },
        "/deliver/{id}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deliver",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cart id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ]
            }
        },
        "/items": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "add items",
                "parameters": [
                    {
                        "description": "Item Info",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Item"
                        }
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "login",
                "parameters": [
                    {
                        "description": "Account Info",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ]
            }
        },
        "/products": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "add products",
                "parameters": [
                    {
                        "description": "Product Info",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    }
                ]
            }
        },
        "/search": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "search",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page num",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search term",
                        "name": "term",
                        "in": "query"
                    }
                ]
            }
        },
        "/signup": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "signup",
                "parameters": [
                    {
                        "description": "Account Info",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "find users"
            }
        }
    },
    "definitions": {
        "models.Category": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Item": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "disc": {
                    "type": "boolean"
                },
                "discAmount": {
                    "description": "%",
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "pricePerItem": {
                    "type": "number"
                },
                "product": {
                    "$ref": "#/definitions/models.Product"
                },
                "qty": {
                    "type": "integer"
                },
                "top": {
                    "description": "maens will show always on homepage",
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Order": {
            "type": "object",
            "properties": {
                "canceled": {
                    "description": "user set",
                    "type": "boolean"
                },
                "confirmed": {
                    "description": "Description  string",
                    "type": "boolean"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "delivered": {
                    "description": "admin set",
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "locationDesc": {
                    "type": "string"
                },
                "orders": {
                    "description": "Price        float32 // calculate on front",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OrderItem"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "userID": {
                    "description": "Name         string",
                    "type": "integer"
                }
            }
        },
        "models.OrderItem": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "item": {
                    "$ref": "#/definitions/models.Item"
                },
                "itemID": {
                    "description": "create ref onself beacuse it's a one to many rel and other solutions would result in overwritten rels",
                    "type": "integer"
                },
                "orderID": {
                    "type": "integer"
                },
                "qty": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Product": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "categoryID": {
                    "description": "create ref onself beacuse it's a one to many rel and other solutions would result in overwritten rels",
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imgURL": {
                    "type": "string"
                },
                "itemID": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "admin": {
                    "type": "boolean"
                },
                "banned": {
                    "type": "boolean"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Order"
                    }
                },
                "password": {
                    "type": "string"
                },
                "phoneno": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "description": "make it unique",
                    "type": "string"
                },
                "validated": {
                    "type": "boolean"
                }
            }
        }
    }
}