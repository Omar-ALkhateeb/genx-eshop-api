basePath: /api
definitions:
  models.Category:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.Item:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      disc:
        type: boolean
      discAmount:
        description: '%'
        type: number
      id:
        type: integer
      pricePerItem:
        type: number
      product:
        $ref: '#/definitions/models.Product'
      qty:
        type: integer
      top:
        description: maens will show always on homepage
        type: boolean
      updatedAt:
        type: string
    type: object
  models.Order:
    properties:
      canceled:
        description: user set
        type: boolean
      confirmed:
        description: Description  string
        type: boolean
      createdAt:
        type: string
      deletedAt:
        type: string
      delivered:
        description: admin set
        type: boolean
      id:
        type: integer
      locationDesc:
        type: string
      orders:
        description: Price        float32 // calculate on front
        items:
          $ref: '#/definitions/models.OrderItem'
        type: array
      updatedAt:
        type: string
      userID:
        description: Name         string
        type: integer
    type: object
  models.OrderItem:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      item:
        $ref: '#/definitions/models.Item'
      itemID:
        description: create ref onself beacuse it's a one to many rel and other solutions
          would result in overwritten rels
        type: integer
      orderID:
        type: integer
      qty:
        type: integer
      updatedAt:
        type: string
    type: object
  models.Product:
    properties:
      category:
        $ref: '#/definitions/models.Category'
      categoryID:
        description: create ref onself beacuse it's a one to many rel and other solutions
          would result in overwritten rels
        type: integer
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      id:
        type: integer
      imgURL:
        type: string
      itemID:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.User:
    properties:
      admin:
        type: boolean
      banned:
        type: boolean
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      id:
        type: integer
      orders:
        items:
          $ref: '#/definitions/models.Order'
        type: array
      password:
        type: string
      phoneno:
        type: string
      updatedAt:
        type: string
      username:
        description: make it unique
        type: string
      validated:
        type: boolean
    type: object
host: localhost:3000
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Example API
  version: "1.0"
paths:
  /:
    get:
      parameters:
      - description: page num
        in: query
        name: page
        type: integer
      produces:
      - application/json
      summary: homepage
  /auth/{id}:
    get:
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      summary: validate email
  /cancel:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      summary: cancel cart
  /cart:
    get:
      produces:
      - application/json
      summary: get cart
    post:
      consumes:
      - application/json
      parameters:
      - description: Order Item Info
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.OrderItem'
      produces:
      - application/json
      summary: add to cart
  /categories:
    post:
      consumes:
      - application/json
      parameters:
      - description: Category Info
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      summary: add categories
  /checkout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      summary: checkout
  /del/cart/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: order item id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      summary: remove from cart
  /del/categories/{id}:
    get:
      parameters:
      - description: catg id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      summary: del categories
  /del/items/{id}:
    get:
      parameters:
      - description: item id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      summary: del items
  /del/products/{id}:
    get:
      parameters:
      - description: prod id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      summary: del products
  /deliver/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: cart id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      summary: deliver
  /items:
    post:
      consumes:
      - application/json
      parameters:
      - description: Item Info
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.Item'
      produces:
      - application/json
      summary: add items
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Account Info
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      summary: login
  /products:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Product Info
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      summary: add products
  /search:
    get:
      parameters:
      - description: page num
        in: query
        name: page
        type: integer
      - description: search term
        in: query
        name: term
        type: string
      produces:
      - application/json
      summary: search
  /signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Account Info
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      summary: signup
  /users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      summary: find users
swagger: "2.0"
